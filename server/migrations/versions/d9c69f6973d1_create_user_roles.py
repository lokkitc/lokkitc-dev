"""create user roles

Revision ID: d9c69f6973d1
Revises: 97a193e3e201
Create Date: 2025-04-02 10:07:47.341341

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd9c69f6973d1'
down_revision: Union[str, None] = '97a193e3e201'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Проверяем существование типа и обновляем его
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    existing_enums = inspector.get_enums()
    
    if not any(e['name'] == 'user_role' for e in existing_enums):
        user_role = sa.Enum('ROLE_USER', 'ROLE_MODERATOR', 'ROLE_ADMIN', 'ROLE_SUPERADMIN', name='user_role')
        user_role.create(connection)
    else:
        # Обновляем существующие значения enum
        op.execute("ALTER TYPE user_role RENAME VALUE 'USER' TO 'ROLE_USER'")
        op.execute("ALTER TYPE user_role RENAME VALUE 'MODERATOR' TO 'ROLE_MODERATOR'")
        op.execute("ALTER TYPE user_role RENAME VALUE 'ADMIN' TO 'ROLE_ADMIN'")
        op.execute("ALTER TYPE user_role ADD VALUE IF NOT EXISTS 'ROLE_SUPERADMIN'")
    
    # Добавляем колонку roles как nullable
    op.add_column('users', sa.Column('roles', postgresql.ARRAY(sa.Enum('ROLE_USER', 'ROLE_MODERATOR', 'ROLE_ADMIN', 'ROLE_SUPERADMIN', name='user_role')), nullable=True))
    
    # Обновляем существующие записи значением по умолчанию
    op.execute("UPDATE users SET roles = ARRAY[role]::user_role[] WHERE roles IS NULL")
    
    # Делаем колонку NOT NULL
    op.alter_column('users', 'roles', nullable=False)
    
    # Удаляем старую колонку role
    op.drop_column('users', 'role')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Создаем старую колонку role
    op.add_column('users', sa.Column('role', sa.Enum('ROLE_USER', 'ROLE_MODERATOR', 'ROLE_ADMIN', 'ROLE_SUPERADMIN', name='user_role'), nullable=True))
    
    # Копируем первую роль из массива в старую колонку
    op.execute("UPDATE users SET role = roles[1] WHERE role IS NULL")
    
    # Делаем колонку NOT NULL
    op.alter_column('users', 'role', nullable=False)
    
    # Удаляем новую колонку roles
    op.drop_column('users', 'roles')
    
    # Возвращаем старые значения enum
    op.execute("ALTER TYPE user_role RENAME VALUE 'ROLE_USER' TO 'USER'")
    op.execute("ALTER TYPE user_role RENAME VALUE 'ROLE_MODERATOR' TO 'MODERATOR'")
    op.execute("ALTER TYPE user_role RENAME VALUE 'ROLE_ADMIN' TO 'ADMIN'")
    # ### end Alembic commands ###
